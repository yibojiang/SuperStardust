//Super Stardust for pc by yibojiang is licensed under a Creative Commons 署名-非商业性使用-相同方式共享 3.0 Unported License.


/*
-----------------------------------------------------------------------------
Filename:    STGGame.h
-----------------------------------------------------------------------------


This source file is generated by the
   ___                   _              __    __ _                  _ 
  /___\__ _ _ __ ___    /_\  _ __  _ __/ / /\ \ (_)______ _ _ __ __| |
 //  // _` | '__/ _ \  //_\\| '_ \| '_ \ \/  \/ / |_  / _` | '__/ _` |
/ \_// (_| | | |  __/ /  _  \ |_) | |_) \  /\  /| |/ / (_| | | | (_| |
\___/ \__, |_|  \___| \_/ \_/ .__/| .__/ \/  \/ |_/___\__,_|_|  \__,_|
      |___/                 |_|   |_|                                 
      Ogre 1.7.x Application Wizard for VC10 (August 2010)
      http://code.google.com/p/ogreappwizards/
-----------------------------------------------------------------------------
*/
#ifndef __STGGame_h_
#define __STGGame_h_

#include "BaseApplication.h"
#include "../res/resource.h"

#include "GameStateManager.h"
#include "CameraManager.h"
#include "WorldManager.h"


#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
#endif

using namespace Ogre;
class STGGame : public BaseApplication
{
private:


protected:



	virtual void createScene(void);
	virtual void createFrameListener(void);
	// Ogre::FrameListener
	bool frameRenderingQueued(const FrameEvent& evt );
	// OIS::KeyListener
	bool keyPressed( const OIS::KeyEvent& evt );
	bool keyReleased( const OIS::KeyEvent& evt );
	// OIS::MouseListener
	bool mouseMoved( const OIS::MouseEvent& evt );
	bool mousePressed( const OIS::MouseEvent& evt, OIS::MouseButtonID id );
	bool mouseReleased( const OIS::MouseEvent& evt,OIS::MouseButtonID id );

	// OIS::JoyStickListener
	bool buttonPressed( const OIS::JoyStickEvent &arg, int button );
	bool buttonReleased( const OIS::JoyStickEvent &arg, int button );
	bool axisMoved( const OIS::JoyStickEvent &arg, int axis );
	


public:
	STGGame(void);
	virtual ~STGGame(void);

};

#endif // #ifndef __STGGame_h_
